{
	"name": "Test SQL UPSERT",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Produits",
						"type": "DatasetReference"
					},
					"name": "source"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "target"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Window1"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "Join1"
				}
			],
			"script": "\n\nsource(output(\n\t\tProduit as string,\n\t\tCouleur as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source\nsource(output(\n\t\tProduit as string,\n\t\tCouleur as string,\n\t\tRank as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> target\nJoin1 window(over(source@Produit),\n\tasc(source@Couleur, true),\n\tRank = denseRank(source@Couleur)) ~> Window1\nWindow1 alterRow(insertIf(!isNull(source@Produit) && isNull(target@Produit)),\n\tupdateIf(!isNull(source@Produit) && !isNull(target@Produit) && (source@Couleur != target@Couleur))) ~> AlterRow1\nsource, target join(source@Produit == target@Produit,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join1\nAlterRow1 sink(input(\n\t\tProduit as string,\n\t\tCouleur as string,\n\t\tRank as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['sink1@Produit'],\n\tformat: 'table') ~> sink1"
		}
	}
}